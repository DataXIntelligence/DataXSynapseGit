{
	"name": "Twitch Streamer Data Pipeline",
	"properties": {
		"activities": [
			{
				"name": "LoadStreamersData",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "pl_Pause_or_Resume_Pool",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "LoadStreamersData",
						"type": "NotebookReference"
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "SparkPool01",
						"type": "BigDataPoolReference"
					},
					"executorSize": "Small",
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"driverSize": "Small",
					"numExecutors": null
				}
			},
			{
				"name": "Copy Streamers Data",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LoadStreamersData",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "SqlPoolSink",
						"preCopyScript": "TRUNCATE TABLE Twitch.Streamers",
						"writeBehavior": "Insert",
						"tableOption": "autoCreate"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Streamers",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "StreamersTable",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "pl_Pause_or_Resume_Pool",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_Pause_or_Resume_Pool",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"PLParAction": "Resume",
						"PLParWaitTimeUntil": 20
					}
				}
			},
			{
				"name": "pl_Pause_or_Resume_Pool1",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Copy Streamers Data",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_Pause_or_Resume_Pool",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			}
		],
		"folder": {
			"name": "Twitch"
		},
		"annotations": []
	}
}